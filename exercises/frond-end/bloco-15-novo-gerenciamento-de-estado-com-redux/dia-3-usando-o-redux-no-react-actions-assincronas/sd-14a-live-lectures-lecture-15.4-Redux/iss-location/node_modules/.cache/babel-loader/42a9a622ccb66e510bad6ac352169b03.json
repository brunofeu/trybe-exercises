{"ast":null,"code":"import { GET_ISS_LOCATION_ERROR, GET_ISS_LOCATION_SUCESS } from '../actions';\nconst INITIAL_ISS_LOCATION_STATE = {\n  latitude: -25.4284,\n  longitude: -49.2733,\n  error: null\n};\n\nconst issLocation = (state = INITIAL_ISS_LOCATION_STATE, action) => {\n  switch (action.type) {\n    case GET_ISS_LOCATION_SUCESS:\n      return { ...state,\n        latitude: action.payload.latitude,\n        longitude: action.payload.longitude\n      };\n\n    case GET_ISS_LOCATION_ERROR:\n      return { ...state,\n        error: action.payload.error\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default issLocation;","map":{"version":3,"sources":["/home/feu/Trybe/trybe-exercises/exercises/frond-end/bloco-15-novo-gerenciamento-de-estado-com-redux/dia-3-usando-o-redux-no-react-actions-assincronas/sd-14a-live-lectures-lecture-15.4-Redux/iss-location/src/reducers/issLocation.js"],"names":["GET_ISS_LOCATION_ERROR","GET_ISS_LOCATION_SUCESS","INITIAL_ISS_LOCATION_STATE","latitude","longitude","error","issLocation","state","action","type","payload"],"mappings":"AAAA,SAASA,sBAAT,EAAiCC,uBAAjC,QAAgE,YAAhE;AAEA,MAAMC,0BAA0B,GAAG;AACjCC,EAAAA,QAAQ,EAAE,CAAC,OADsB;AAEjCC,EAAAA,SAAS,EAAE,CAAC,OAFqB;AAGjCC,EAAAA,KAAK,EAAE;AAH0B,CAAnC;;AAMA,MAAMC,WAAW,GAAG,CAClBC,KAAK,GAAGL,0BADU,EAElBM,MAFkB,KAGf;AACH,UAAQA,MAAM,CAACC,IAAf;AACA,SAAKR,uBAAL;AACE,aAAQ,EACN,GAAGM,KADG;AAENJ,QAAAA,QAAQ,EAAEK,MAAM,CAACE,OAAP,CAAeP,QAFnB;AAGNC,QAAAA,SAAS,EAAEI,MAAM,CAACE,OAAP,CAAeN;AAHpB,OAAR;;AAMF,SAAKJ,sBAAL;AACE,aAAQ,EACN,GAAGO,KADG;AAENF,QAAAA,KAAK,EAAEG,MAAM,CAACE,OAAP,CAAeL;AAFhB,OAAR;;AAKF;AACE,aAAOE,KAAP;AAfF;AAiBD,CArBD;;AAuBA,eAAeD,WAAf","sourcesContent":["import { GET_ISS_LOCATION_ERROR, GET_ISS_LOCATION_SUCESS } from '../actions';\n\nconst INITIAL_ISS_LOCATION_STATE = {\n  latitude: -25.4284,\n  longitude: -49.2733,\n  error: null,\n};\n\nconst issLocation = (\n  state = INITIAL_ISS_LOCATION_STATE,\n  action,\n) => {\n  switch (action.type) {\n  case GET_ISS_LOCATION_SUCESS:\n    return ({\n      ...state,\n      latitude: action.payload.latitude,\n      longitude: action.payload.longitude,\n    });\n\n  case GET_ISS_LOCATION_ERROR:\n    return ({\n      ...state,\n      error: action.payload.error,\n    });\n\n  default:\n    return state;\n  }\n};\n\nexport default issLocation;\n"]},"metadata":{},"sourceType":"module"}