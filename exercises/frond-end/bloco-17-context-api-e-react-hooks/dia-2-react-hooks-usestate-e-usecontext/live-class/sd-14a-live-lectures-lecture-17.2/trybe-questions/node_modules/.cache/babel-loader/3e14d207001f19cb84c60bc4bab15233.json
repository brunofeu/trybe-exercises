{"ast":null,"code":"import data from './questionsData';\nlocalStorage.setItem('questions', JSON.stringify(data));\n\nconst readQuestions = () => JSON.parse(localStorage.getItem('questions'));\n\nconst saveQuestions = questions => localStorage.setItem('questions', JSON.stringify(questions));\n\nconst ONE_SECOND = 1000;\nexport const getQuestions = () => new Promise(resolve => {\n  setTimeout(() => {\n    const questions = readQuestions();\n    resolve(questions);\n  }, ONE_SECOND);\n});\nexport const createQuestion = questionData => {\n  let questions = readQuestions();\n  const nextId = questions[questions.length - 1].id + 1;\n  const newQuestion = { ...questionData,\n    id: nextId\n  };\n  questions = [...questions, newQuestion];\n  saveQuestions(questions);\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve('OK');\n    }, 100);\n  });\n};","map":{"version":3,"sources":["/home/feu/Trybe/trybe-exercises/exercises/frond-end/bloco-17-context-api-e-react-hooks/dia-2-react-hooks-usestate-e-usecontext/live-class/sd-14a-live-lectures-lecture-17.2/trybe-questions/src/services/api.js"],"names":["data","localStorage","setItem","JSON","stringify","readQuestions","parse","getItem","saveQuestions","questions","ONE_SECOND","getQuestions","Promise","resolve","setTimeout","createQuestion","questionData","nextId","length","id","newQuestion"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,iBAAjB;AAEAC,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAAlC;;AAEA,MAAMK,aAAa,GAAG,MAAMF,IAAI,CAACG,KAAL,CAAWL,YAAY,CAACM,OAAb,CAAqB,WAArB,CAAX,CAA5B;;AAEA,MAAMC,aAAa,GAAIC,SAAD,IAAeR,YAAY,CAC9CC,OADkC,CAC1B,WAD0B,EACbC,IAAI,CAACC,SAAL,CAAeK,SAAf,CADa,CAArC;;AAGA,MAAMC,UAAU,GAAG,IAAnB;AAEA,OAAO,MAAMC,YAAY,GAAG,MAC1B,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AACvBC,EAAAA,UAAU,CAAC,MAAM;AACf,UAAML,SAAS,GAAGJ,aAAa,EAA/B;AACAQ,IAAAA,OAAO,CAACJ,SAAD,CAAP;AACD,GAHS,EAGPC,UAHO,CAAV;AAID,CALD,CADK;AASP,OAAO,MAAMK,cAAc,GAAIC,YAAD,IAAkB;AAC9C,MAAIP,SAAS,GAAGJ,aAAa,EAA7B;AACA,QAAMY,MAAM,GAAGR,SAAS,CAACA,SAAS,CAACS,MAAV,GAAmB,CAApB,CAAT,CAAgCC,EAAhC,GAAqC,CAApD;AACA,QAAMC,WAAW,GAAG,EAAE,GAAGJ,YAAL;AAAmBG,IAAAA,EAAE,EAAEF;AAAvB,GAApB;AACAR,EAAAA,SAAS,GAAG,CAAC,GAAGA,SAAJ,EAAeW,WAAf,CAAZ;AACAZ,EAAAA,aAAa,CAACC,SAAD,CAAb;AAEA,SAAO,IAAIG,OAAJ,CAAaC,OAAD,IAAa;AAC9BC,IAAAA,UAAU,CAAC,MAAM;AACfD,MAAAA,OAAO,CAAC,IAAD,CAAP;AACD,KAFS,EAEP,GAFO,CAAV;AAGD,GAJM,CAAP;AAKD,CAZM","sourcesContent":["import data from './questionsData';\n\nlocalStorage.setItem('questions', JSON.stringify(data));\n\nconst readQuestions = () => JSON.parse(localStorage.getItem('questions'));\n\nconst saveQuestions = (questions) => localStorage\n  .setItem('questions', JSON.stringify(questions));\n\nconst ONE_SECOND = 1000;\n\nexport const getQuestions = () => (\n  new Promise((resolve) => {\n    setTimeout(() => {\n      const questions = readQuestions();\n      resolve(questions);\n    }, ONE_SECOND);\n  })\n);\n\nexport const createQuestion = (questionData) => {\n  let questions = readQuestions();\n  const nextId = questions[questions.length - 1].id + 1;\n  const newQuestion = { ...questionData, id: nextId };\n  questions = [...questions, newQuestion];\n  saveQuestions(questions);\n\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve('OK');\n    }, 100);\n  });\n};\n"]},"metadata":{},"sourceType":"module"}