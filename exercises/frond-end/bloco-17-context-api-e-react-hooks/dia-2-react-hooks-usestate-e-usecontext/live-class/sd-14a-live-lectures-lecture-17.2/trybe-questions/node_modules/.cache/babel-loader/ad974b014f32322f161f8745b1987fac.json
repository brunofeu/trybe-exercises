{"ast":null,"code":"var _jsxFileName = \"/home/feu/Trybe/trybe-exercises/exercises/frond-end/bloco-17-context-api-e-react-hooks/dia-2-react-hooks-usestate-e-usecontext/live-class/sd-14a-live-lectures-lecture-17.2/trybe-questions/src/context/QuestionsProvider.js\";\nimport React, { useState } from 'react';\nimport { createQuestion, getQuestions } from '../services/api';\nimport QuestionsContext from './QuestionsContext';\n\nfunction QuestionsProvider({\n  children\n}) {\n  const [question, setQuestion] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  async function fetchQuestions() {\n    setIsLoading(true);\n    const questions = await getQuestions();\n    setQuestion(questions);\n    setIsLoading(false);\n  }\n\n  const createNewQuestion = async newQuestion => {\n    setIsLoading(true);\n    await createQuestion(newQuestion);\n    setQuestion([...question, newQuestion]);\n    setIsLoading(false);\n  };\n\n  return /*#__PURE__*/React.createElement(QuestionsContext.Provider, {\n    value: {\n      question,\n      isLoading,\n      fetchQuestions,\n      createNewQuestion\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, children);\n}\n\nexport default QuestionsProvider;","map":{"version":3,"sources":["/home/feu/Trybe/trybe-exercises/exercises/frond-end/bloco-17-context-api-e-react-hooks/dia-2-react-hooks-usestate-e-usecontext/live-class/sd-14a-live-lectures-lecture-17.2/trybe-questions/src/context/QuestionsProvider.js"],"names":["React","useState","createQuestion","getQuestions","QuestionsContext","QuestionsProvider","children","question","setQuestion","isLoading","setIsLoading","fetchQuestions","questions","createNewQuestion","newQuestion"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,cAAT,EAAyBC,YAAzB,QAA6C,iBAA7C;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;AAEA,SAASC,iBAAT,CAA2B;AAAEC,EAAAA;AAAF,CAA3B,EAAyC;AACvC,QAAM,CAAEC,QAAF,EAAYC,WAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAAEQ,SAAF,EAAaC,YAAb,IAA8BT,QAAQ,CAAC,KAAD,CAA5C;;AAEA,iBAAeU,cAAf,GAAgC;AAC9BD,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,UAAME,SAAS,GAAG,MAAMT,YAAY,EAApC;AACAK,IAAAA,WAAW,CAACI,SAAD,CAAX;AACAF,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;;AAED,QAAMG,iBAAiB,GAAG,MAAOC,WAAP,IAAuB;AAC/CJ,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,UAAMR,cAAc,CAACY,WAAD,CAApB;AACAN,IAAAA,WAAW,CAAC,CAAE,GAAGD,QAAL,EAAeO,WAAf,CAAD,CAAX;AACAJ,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GALD;;AAOA,sBACE,oBAAC,gBAAD,CAAkB,QAAlB;AAA2B,IAAA,KAAK,EAAG;AAAEH,MAAAA,QAAF;AAAYE,MAAAA,SAAZ;AAAuBE,MAAAA,cAAvB;AAAuCE,MAAAA;AAAvC,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,QADH,CADF;AAKD;;AAED,eAAeD,iBAAf","sourcesContent":["import React, { useState } from 'react';\nimport { createQuestion, getQuestions } from '../services/api';\nimport QuestionsContext from './QuestionsContext';\n\nfunction QuestionsProvider({ children }) {\n  const [ question, setQuestion ] = useState([]);\n  const [ isLoading, setIsLoading ] = useState(false);\n\n  async function fetchQuestions() {\n    setIsLoading(true);\n    const questions = await getQuestions();\n    setQuestion(questions);\n    setIsLoading(false);\n  }\n\n  const createNewQuestion = async (newQuestion) => {\n    setIsLoading(true);\n    await createQuestion(newQuestion);\n    setQuestion([ ...question, newQuestion]);\n    setIsLoading(false);\n  }\n\n  return(\n    <QuestionsContext.Provider value={ { question, isLoading, fetchQuestions, createNewQuestion }}>\n      {children}\n    </QuestionsContext.Provider>\n    );\n}\n\nexport default QuestionsProvider;\n"]},"metadata":{},"sourceType":"module"}