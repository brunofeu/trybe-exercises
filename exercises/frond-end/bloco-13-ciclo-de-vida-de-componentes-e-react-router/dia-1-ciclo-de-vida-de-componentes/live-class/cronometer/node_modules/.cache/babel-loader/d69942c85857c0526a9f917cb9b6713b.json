{"ast":null,"code":"var _jsxFileName = \"/home/feu/Trybe/trybe-exercises/exercises/frond-end/bloco-13-ciclo-de-vida-de-componentes-e-react-router/dia-1-ciclo-de-vida-de-componentes/live-class/cronometer/src/components/Cronometer.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Cronometer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.resetSeconds = () => {\n      this.setState({\n        seconds: 0\n      });\n    };\n\n    this.state = {\n      seconds: 0\n    };\n  }\n\n  componentDidMount() {\n    const ONE_SECOND = 300;\n    this.cronometerInterval = setInterval(() => {\n      this.setState(prevState => ({\n        seconds: prevState.seconds + 1\n      }));\n    }, ONE_SECOND);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const MAX_SECONDS = 30;\n\n    if (prevState.seconds === MAX_SECONDS) {\n      this.resetSeconds();\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.cronometerInterval);\n  }\n\n  render() {\n    const {\n      seconds\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: seconds\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Cronometer;","map":{"version":3,"sources":["/home/feu/Trybe/trybe-exercises/exercises/frond-end/bloco-13-ciclo-de-vida-de-componentes-e-react-router/dia-1-ciclo-de-vida-de-componentes/live-class/cronometer/src/components/Cronometer.js"],"names":["React","Component","Cronometer","constructor","props","resetSeconds","setState","seconds","state","componentDidMount","ONE_SECOND","cronometerInterval","setInterval","prevState","componentDidUpdate","prevProps","MAX_SECONDS","componentWillUnmount","clearInterval","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAIA,MAAMC,UAAN,SAAyBD,SAAzB,CAAmC;AACjCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAuBnBC,YAvBmB,GAuBJ,MAAM;AACnB,WAAKC,QAAL,CAAc;AAACC,QAAAA,OAAO,EAAE;AAAV,OAAd;AACD,KAzBkB;;AAEjB,SAAKC,KAAL,GAAa;AAAED,MAAAA,OAAO,EAAE;AAAX,KAAb;AACD;;AAEDE,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,UAAU,GAAG,GAAnB;AACA,SAAKC,kBAAL,GAA0BC,WAAW,CAAC,MAAM;AAC1C,WAAKN,QAAL,CAAeO,SAAD,KAAgB;AAAEN,QAAAA,OAAO,EAAEM,SAAS,CAACN,OAAV,GAAoB;AAA/B,OAAhB,CAAd;AACD,KAFoC,EAElCG,UAFkC,CAArC;AAGD;;AAEDI,EAAAA,kBAAkB,CAACC,SAAD,EAAYF,SAAZ,EAAuB;AACvC,UAAMG,WAAW,GAAG,EAApB;;AACA,QAAKH,SAAS,CAACN,OAAV,KAAsBS,WAA3B,EAAwC;AACtC,WAAKX,YAAL;AACD;AACF;;AAEDY,EAAAA,oBAAoB,GAAG;AACrBC,IAAAA,aAAa,CAAC,KAAKP,kBAAN,CAAb;AACD;;AAMDQ,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEZ,MAAAA;AAAF,QAAc,KAAKC,KAAzB;AAIA,wBACE;AAAA,gBACGD;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAtCgC;;AAyCnC,eAAeL,UAAf","sourcesContent":["import React, { Component } from 'react';\n\n\n\nclass Cronometer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { seconds: 0 };\n  }\n\n  componentDidMount() {\n    const ONE_SECOND = 300;\n    this.cronometerInterval = setInterval(() => {\n      this.setState((prevState) => ({ seconds: prevState.seconds + 1}))\n    }, ONE_SECOND);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const MAX_SECONDS = 30;\n    if ( prevState.seconds === MAX_SECONDS) {\n      this.resetSeconds()\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.cronometerInterval)\n  }\n\n  resetSeconds = () => {\n    this.setState({seconds: 0})\n  }\n\n  render() {\n    const { seconds } = this.state;\n\n    \n\n    return (\n      <h2>\n        {seconds}\n      </h2>\n    );\n  }\n}\n\nexport default Cronometer;"]},"metadata":{},"sourceType":"module"}